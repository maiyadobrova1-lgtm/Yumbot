import os
import json
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# üëâ –¢–æ–∫–µ–Ω Telegram (–ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞
with open("recipes.json", "r", encoding="utf-8") as f:
    recipes = json.load(f)

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø Yumbot ü§ñüç¥\n"
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∏ —è –ø–æ–¥—Å–∫–∞–∂—É —Ä–µ—Ü–µ–ø—Ç!"
    )

# –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —á–µ—Ä–µ–∑ API TheMealDB
def get_mealdb_image(recipe_name: str):
    url = f"https://www.themealdb.com/api/json/v1/1/search.php?s={recipe_name}"
    try:
        response = requests.get(url, timeout=10)
        data = response.json()
        if data["meals"]:
            return data["meals"][0]["strMealThumb"]
    except Exception as e:
        print(f"[Image error] {e}")
    return None

# –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º
async def find_recipe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_ingredients = set(update.message.text.lower().split())
    selected = None
    for recipe in recipes:
        if user_ingredients & set(recipe["ingredients"]):
            selected = recipe
            break

    if not selected:
        await update.message.reply_text("–£–ø—Å üòÖ –Ø –Ω–µ –Ω–∞—à—ë–ª —Ä–µ—Ü–µ–ø—Ç. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã!")
        return

    recipe_text = f"üçΩ {selected['name']}\n\n{selected['instructions']}"

    # –∏—â–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_url = get_mealdb_image(selected["name"])
    if image_url:
        await update.message.reply_photo(photo=image_url, caption=recipe_text)
    else:
        await update.message.reply_text(recipe_text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    if not TELEGRAM_TOKEN:
        raise RuntimeError("‚ö†Ô∏è –î–æ–±–∞–≤—å TELEGRAM_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, find_recipe))
    app.run_polling()

if __name__ == "__main__":
    main()
