import os
import json
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# üëâ –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TELEGRAM_TOKEN = "–¢–û–ö–ï–ù_–û–¢_BOTFATHER"

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
with open("recipes.json", "r", encoding="utf-8") as f:
    recipes = json.load(f)

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø Yumbot ü§ñüç¥ –ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã ‚Äî —è –ø–æ–¥—Å–∫–∞–∂—É —Ä–µ—Ü–µ–ø—Ç!"
    )

# –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤
async def find_recipe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_ingredients = set(update.message.text.lower().split())
    selected = None
    for recipe in recipes:
        if user_ingredients & set(recipe["ingredients"]):
            selected = recipe
            break

    if not selected:
        await update.message.reply_text("–£–ø—Å üòÖ –Ø –Ω–µ –Ω–∞—à—ë–ª —Ä–µ—Ü–µ–ø—Ç. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã!")
        return

    recipe_text = f"üçΩ {selected['name']}\n{recipe['instructions']}"
    await update.message.reply_text(recipe_text)

def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, find_recipe))
    app.run_polling()

if __name__ == "__main__":
    main()
